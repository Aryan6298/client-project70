{"version":3,"file":"static/js/590.bb76c550.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","pages/Gallery.jsx"],"sourcesContent":["import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { animationControls } from './animation-controls.mjs';\n\n/**\n * Creates `LegacyAnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `LegacyAnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import React, { useRef } from 'react';\nimport './Gallery.css';\nimport { motion, useAnimation, useInView } from 'framer-motion';\n\n// Importing all gallery images\nimport gallery01 from '../assets/images/gallery01.jpg';\nimport gallery02 from '../assets/images/gallery02.jpg';\nimport gallery03 from '../assets/images/gallery03.jpg';\nimport gallery04 from '../assets/images/gallery04.jpg';\nimport gallery05 from '../assets/images/gallery05.jpg';\nimport gallery06 from '../assets/images/gallery06.jpg';\nimport gallery07 from '../assets/images/gallery07.jpg';\nimport gallery10 from '../assets/images/gallery10.jpg';\nimport gallery11 from '../assets/images/gallery11.jpg';\nimport gallery12 from '../assets/images/gallery12.jpg';\nimport gallery13 from '../assets/images/gallery13.jpg';\nimport gallery14 from '../assets/images/gallery14.jpg';\nimport gallery15 from '../assets/images/gallery15.jpg';\nimport gallery16 from '../assets/images/gallery16.jpg';\n\nconst galleryImages = [\n  { src: gallery01, caption: 'Collaborative efforts to restore and protect our local ecosystems.' },\n  { src: gallery02, caption: 'Teamwork makes the dream work in our mission for a greener planet.' },\n  { src: gallery03, caption: 'Dedicated volunteers working together to conserve natural habitats.' },\n  { src: gallery04, caption: \"United for change: our team's commitment to environmental sustainability.\" },\n  { src: gallery05, caption: 'Every hand helps in our community-driven conservation projects.' },\n  { src: gallery06, caption: 'Planting seeds of hope for a more sustainable and vibrant future.' },\n  { src: gallery07, caption: 'Our team in action, dedicated to preserving the beauty of our environment.' },\n  { src: gallery10, caption: 'Working hand-in-hand to build a cleaner, healthier world for all.' },\n  { src: gallery11, caption: 'Empowering communities through shared environmental stewardship.' },\n  { src: gallery12, caption: 'The power of teamwork in creating lasting environmental impact.' },\n  { src: gallery13, caption: 'From local clean-ups to large-scale projects, our team does it all.' },\n  { src: gallery14, caption: 'Together, we are a force for nature and a voice for the environment.' },\n  { src: gallery15, caption: 'Fostering a culture of conservation through teamwork and dedication.' },\n  { src: gallery16, caption: 'Our shared passion for the environment fuels our collaborative success.' },\n];\n\nconst Gallery = () => {\n  const gridRef = useRef(null);\n  const isInView = useInView(gridRef, { once: true, amount: 0.2 });\n  const controls = useAnimation();\n\n  // Responsive check for mobile\n  const isMobile = window.innerWidth <= 700;\n\n  React.useEffect(() => {\n    if (isInView) {\n      controls.start({ y: 0, opacity: 1, transition: { duration: 0.4 } });\n    }\n  }, [isInView, controls]);\n\n  return (\n    <div className=\"gallery-page\">\n      <div className=\"gallery-header\">\n        <h1 className=\"gallery-title\">Our Environmental Journey</h1>\n        <p className=\"gallery-intro\">\n          Explore moments from our journey, showcasing our team's collective effort and unwavering dedication to protecting and nurturing our environment.\n        </p>\n      </div>\n      <div className=\"gallery-grid-container\" ref={gridRef}>\n        {galleryImages.map((image, index) => {\n          if (index < 8) {\n            return (\n              <div className=\"gallery-card\" key={index}>\n                <motion.img\n                  src={image.src}\n                  alt={`Gallery Scene ${index + 1}`}\n                  className=\"gallery-card-image\"\n                  loading=\"lazy\"\n                  initial={{ y: 60, opacity: 0 }}\n                  animate={isMobile ? { y: 0, opacity: 1, transition: { duration: 0.4 } } : controls}\n                  whileHover={{ scale: 1.02, boxShadow: '0 8px 18px rgba(255,102,0,0.13)' }}\n                  style={{ touchAction: 'manipulation' }}\n                />\n                <div className=\"gallery-card-overlay\">\n                  <p className=\"gallery-card-caption\">{image.caption}</p>\n                </div>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"gallery-card\" key={index}>\n                <img\n                  src={image.src}\n                  alt={`Gallery Scene ${index + 1}`}\n                  className=\"gallery-card-image\"\n                  loading=\"lazy\"\n                  style={{ touchAction: 'manipulation' }}\n                />\n                <div className=\"gallery-card-overlay\">\n                  <p className=\"gallery-card-caption\">{image.caption}</p>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery; "],"names":["thresholds","some","all","useInView","ref","root","margin","amount","once","initial","arguments","length","undefined","isInView","setInView","useState","useEffect","current","options","elementOrSelector","onStart","rootMargin","elements","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","inView","onEnter","setVariants","visualElement","variantLabels","reverse","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","Array","isArray","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","galleryImages","src","gallery01","caption","gallery02","gallery03","gallery04","gallery05","gallery06","gallery07","gallery10","gallery11","gallery12","gallery13","gallery14","gallery15","gallery16","Gallery","gridRef","useRef","isMobile","window","innerWidth","React","y","opacity","transition","duration","_jsxs","className","children","_jsx","map","image","index","motion","img","alt","concat","loading","animate","whileHover","scale","boxShadow","style","touchAction"],"sourceRoot":""}